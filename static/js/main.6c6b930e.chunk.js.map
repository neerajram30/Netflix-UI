{"version":3,"sources":["NavBar.js","axios.js","RowPost.js","requests.jsx","Banner.js","HomeScreen.js","App.js","features/counterSlice.js","app/store.js","index.js"],"names":["NavBar","className","src","alt","instance","axios","create","baseURL","RowPost","title","fetchUrl","isLargePoster","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","map","movie","poster_path","backdrop_path","onClick","movieTrailer","name","then","url","console","log","urlParams","URLSearchParams","URL","search","catch","error","handleClick","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOrginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","string","n","setMovie","Math","floor","random","length","style","backgroundImage","orginal_name","overview","substring","HomeScreen","App","counterSlice","createSlice","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","store","configureStore","reducer","counter","counterReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c6b930e.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./NavBar.css\"\r\nfunction NavBar() {\r\n    return (\r\n        <div className=\"navbar\">\r\n            \r\n            <img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\" alt=\"\" />\r\n            <img src=\"https://www.searchpng.com/wp-content/uploads/2019/02/Profile-ICon.png\"  \r\n            alt=\"\" className=\"avatar\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"http://api.themoviedb.org/3\"\r\n})\r\n\r\nexport default instance;","import axios from './axios'\r\nimport React,{useEffect,useState} from 'react'\r\nimport './RowPost.css'\r\nimport YouTube from 'react-youtube'\r\nimport movieTrailer from 'movie-trailer'\r\nfunction RowPost({title,fetchUrl,isLargePoster=false }) {\r\n    \r\n    const [movies,setMovies]= useState([])\r\n    const [trailerUrl,setTrailerUrl] = useState(\"\");\r\n\r\n    const imgurl=\"https://image.tmdb.org/t/p/original/\"\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n        return request;\r\n    }\r\n    fetchData();\r\n    }, [fetchUrl])\r\n    const opts={\r\n        height : \"390\",\r\n        width : \"100%\",\r\n        playerVars: {\r\n            autoplay:1,\r\n        },\r\n    };\r\n\r\n    const handleClick= (movie)=>{\r\n     if(trailerUrl){\r\n             setTrailerUrl(\"\");\r\n         }else{\r\n             movieTrailer(movie?.name || \"\")\r\n             .then((url)=>{\r\n                 console.log(url)\r\n                 const urlParams = new URLSearchParams(new URL(url).search)\r\n                 setTrailerUrl (urlParams.get(\"v\"));\r\n\r\n             }).catch((error)=>{\r\n                 console.log(error); \r\n             })\r\n         }\r\n     }\r\n    return (\r\n        <div className=\"row\">\r\n            <h1>{title}</h1>\r\n            <div className=\"posters\">\r\n                {movies.map((movie)=>\r\n\r\n                    ((isLargePoster && movie.poster_path) || (!isLargePoster && movie.backdrop_path)) &&(\r\n\r\n                    (    <img \r\n                        key={movie.id}\r\n                        onClick={()=>handleClick(movie)}\r\n                        className={`poster ${isLargePoster && \"poster_large\"}`} \r\n                    src={`${imgurl}${isLargePoster? movie.poster_path : movie.backdrop_path}`} \r\n                    alt={movie.name} />\r\n                )\r\n                ))}\r\n                \r\n            </div>\r\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts}/>}        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RowPost\r\n","\r\nconst API_KEY = \"e968b1c9ca8f262a54d9956f1b8f3621\"\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOrginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_geners=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_geners=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_geners=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_geners=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_geners=99`,\r\n}\r\n\r\nexport default requests;","import React from 'react'\r\nimport './Banner.css'\r\nimport {useState,useEffect} from 'react'\r\nimport axios from './axios'\r\nimport requests from './requests'\r\n\r\nfunction Banner() {\r\n    const [movie,setMovie] = useState([])\r\n    \r\n   useEffect(() => {\r\n        async function fetchData(){\r\n            const request = await axios.get(requests.fetchNetflixOrginals);\r\n            setMovie(\r\n                request.data.results[\r\n                    Math.floor(Math.random()* request.data.results.length-1)\r\n                ]\r\n            ); \r\n       return request;\r\n       }\r\n       fetchData();\r\n   }, []);\r\n\r\n   console.log(movie);\r\n    function truncate(string, n){\r\n        return string?.length> n ? string.substring(0 ,n-1) +'...' : string;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"Banner\" \r\n        style={{\r\n            backgroundImage :`url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n            \r\n            \r\n        \r\n        }}\r\n        >\r\n            <div className=\"content\">\r\n                <h1 className=\"Title\">{movie?.title || movie?.name || movie?.orginal_name}</h1>\r\n                <div className=\"banner_buttons\">\r\n                    <button className='button'>Play</button>\r\n                    <button className='button'>My list</button>\r\n\r\n                </div>\r\n                <h1 className=\"description\">{truncate(movie?.overview,150)}</h1>\r\n            </div>\r\n            <div className=\"fade_bottom\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n ","import React from 'react'\r\nimport NavBar from './NavBar'\r\nimport RowPost from './RowPost'\r\nimport Banner from './Banner'\r\nimport requests from './requests'\r\nimport './HomeScreen.css'\r\nfunction HomeScreen() {\r\n    return (\r\n        <div>\r\n            <NavBar/>\r\n            <Banner/>\r\n            <RowPost title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetflixOrginals} isLargePoster/>\r\n            <RowPost title=\"Trending Now\" fetchUrl={requests.fetchTrending}/>\r\n            <RowPost title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\r\n            <RowPost title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\r\n            <RowPost title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\r\n            <RowPost title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\r\n            <RowPost title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\r\n            <RowPost title=\"Doccumentaries\" fetchUrl={requests.fetchDocumentaries}/>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React from 'react';\nimport HomeScreen from './HomeScreen'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomeScreen/>\n    </div>\n  );\n}\n\nexport default App;\n","import {  createSlice } from '@reduxjs/toolkit';\n\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\n// export const incrementAsync = createAsyncThunk(\n//   'counter/fetchCount',\n//   async (amount) => {\n//     const response = await fetchCount(amount);\n//     // The value we return becomes the `fulfilled` action payload\n//     return response.data;\n//   }\n// );\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n//   extraReducers: (builder) => {\n//     builder\n//       .addCase(incrementAsync.pending, (state) => {\n//         state.status = 'loading';\n//       })\n//       .addCase(incrementAsync.fulfilled, (state, action) => {\n//         state.status = 'idle';\n//         state.value += action.payload;\n//       });\n//   },\n });\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\n//export const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\n// export const incrementIfOdd = (amount) => (dispatch, getState) => {\n//   const currentValue = selectCount(getState());\n//   if (currentValue % 2 === 1) {\n//     dispatch(incrementByAmount(amount));\n//   }\n// };\n\n export default counterSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}